type Query {

    me: User

    users: [User!]!
    user(name: String!): User

    authorities: [Authority!]!
    authority(name: String!): Authority

    hello(user: String = "user", pass: String): String
}

interface Entity {
    id: ID!
}

interface AuditingEntity{
    id: ID!
    createdBy: String!
    createdDate: String!
    lastModifiedBy: String
    lastModifiedDate: String
}

type User implements AuditingEntity {
    id: ID!

    login: String!
    email: String!

    personal: Personal!

    createdBy: String!
    createdDate: String!
    lastModifiedBy: String
    lastModifiedDate: String
}

type Personal {
    givenName: String!
    familyName: String!
    birthday: String!
}

type Authority implements AuditingEntity {
    id: ID!

    name: String!

    createdBy: String!
    createdDate: String!
    lastModifiedBy: String
    lastModifiedDate: String
}
